
rgosh001_lab6_part2_ex2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  000007ea  0000087e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  00800120  00800120  0000089e  2**0
                  ALLOC
  3 .stab         00001bfc  00000000  00000000  000008a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007d5  00000000  00000000  0000249c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00002c71  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000068  00000000  00000000  00002ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000002b7  00000000  00000000  00002d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000014d  00000000  00000000  00002fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000004fb  00000000  00000000  0000310c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00003608  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000209  00000000  00000000  00003768  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000028f  00000000  00000000  00003971  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000058  00000000  00000000  00003c00  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea ee       	ldi	r30, 0xEA	; 234
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 32       	cpi	r26, 0x20	; 32
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e2       	ldi	r26, 0x20	; 32
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 32       	cpi	r26, 0x29	; 41
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	fc d1       	rcall	.+1016   	; 0x4bc <main>
  c4:	90 c3       	rjmp	.+1824   	; 0x7e6 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <set_PWM>:
}
// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
	_avr_timer_cntcurr = _avr_timer_M;
}
  c8:	0f 93       	push	r16
  ca:	1f 93       	push	r17
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	00 d0       	rcall	.+0      	; 0xd2 <set_PWM+0xa>
  d2:	00 d0       	rcall	.+0      	; 0xd4 <set_PWM+0xc>
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
  d8:	69 83       	std	Y+1, r22	; 0x01
  da:	7a 83       	std	Y+2, r23	; 0x02
  dc:	8b 83       	std	Y+3, r24	; 0x03
  de:	9c 83       	std	Y+4, r25	; 0x04
  e0:	80 91 24 01 	lds	r24, 0x0124
  e4:	90 91 25 01 	lds	r25, 0x0125
  e8:	a0 91 26 01 	lds	r26, 0x0126
  ec:	b0 91 27 01 	lds	r27, 0x0127
  f0:	9c 01       	movw	r18, r24
  f2:	ad 01       	movw	r20, r26
  f4:	69 81       	ldd	r22, Y+1	; 0x01
  f6:	7a 81       	ldd	r23, Y+2	; 0x02
  f8:	8b 81       	ldd	r24, Y+3	; 0x03
  fa:	9c 81       	ldd	r25, Y+4	; 0x04
  fc:	fb d1       	rcall	.+1014   	; 0x4f4 <__cmpsf2>
  fe:	88 23       	and	r24, r24
 100:	09 f4       	brne	.+2      	; 0x104 <set_PWM+0x3c>
 102:	71 c0       	rjmp	.+226    	; 0x1e6 <set_PWM+0x11e>
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	a9 01       	movw	r20, r18
 10a:	69 81       	ldd	r22, Y+1	; 0x01
 10c:	7a 81       	ldd	r23, Y+2	; 0x02
 10e:	8b 81       	ldd	r24, Y+3	; 0x03
 110:	9c 81       	ldd	r25, Y+4	; 0x04
 112:	f0 d1       	rcall	.+992    	; 0x4f4 <__cmpsf2>
 114:	88 23       	and	r24, r24
 116:	51 f4       	brne	.+20     	; 0x12c <set_PWM+0x64>
 118:	81 e9       	ldi	r24, 0x91	; 145
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	21 e9       	ldi	r18, 0x91	; 145
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	20 81       	ld	r18, Z
 124:	28 70       	andi	r18, 0x08	; 8
 126:	fc 01       	movw	r30, r24
 128:	20 83       	st	Z, r18
 12a:	09 c0       	rjmp	.+18     	; 0x13e <set_PWM+0x76>
 12c:	81 e9       	ldi	r24, 0x91	; 145
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	21 e9       	ldi	r18, 0x91	; 145
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	f9 01       	movw	r30, r18
 136:	20 81       	ld	r18, Z
 138:	23 60       	ori	r18, 0x03	; 3
 13a:	fc 01       	movw	r30, r24
 13c:	20 83       	st	Z, r18
 13e:	28 e5       	ldi	r18, 0x58	; 88
 140:	39 e3       	ldi	r19, 0x39	; 57
 142:	44 e7       	ldi	r20, 0x74	; 116
 144:	5f e3       	ldi	r21, 0x3F	; 63
 146:	69 81       	ldd	r22, Y+1	; 0x01
 148:	7a 81       	ldd	r23, Y+2	; 0x02
 14a:	8b 81       	ldd	r24, Y+3	; 0x03
 14c:	9c 81       	ldd	r25, Y+4	; 0x04
 14e:	d2 d1       	rcall	.+932    	; 0x4f4 <__cmpsf2>
 150:	88 23       	and	r24, r24
 152:	44 f4       	brge	.+16     	; 0x164 <set_PWM+0x9c>
 154:	88 e9       	ldi	r24, 0x98	; 152
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	2f ef       	ldi	r18, 0xFF	; 255
 15a:	3f ef       	ldi	r19, 0xFF	; 255
 15c:	fc 01       	movw	r30, r24
 15e:	31 83       	std	Z+1, r19	; 0x01
 160:	20 83       	st	Z, r18
 162:	30 c0       	rjmp	.+96     	; 0x1c4 <set_PWM+0xfc>
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	34 e2       	ldi	r19, 0x24	; 36
 168:	44 ef       	ldi	r20, 0xF4	; 244
 16a:	56 e4       	ldi	r21, 0x46	; 70
 16c:	69 81       	ldd	r22, Y+1	; 0x01
 16e:	7a 81       	ldd	r23, Y+2	; 0x02
 170:	8b 81       	ldd	r24, Y+3	; 0x03
 172:	9c 81       	ldd	r25, Y+4	; 0x04
 174:	d1 d2       	rcall	.+1442   	; 0x718 <__gesf2>
 176:	18 16       	cp	r1, r24
 178:	34 f4       	brge	.+12     	; 0x186 <set_PWM+0xbe>
 17a:	88 e9       	ldi	r24, 0x98	; 152
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	fc 01       	movw	r30, r24
 180:	11 82       	std	Z+1, r1	; 0x01
 182:	10 82       	st	Z, r1
 184:	1f c0       	rjmp	.+62     	; 0x1c4 <set_PWM+0xfc>
 186:	08 e9       	ldi	r16, 0x98	; 152
 188:	10 e0       	ldi	r17, 0x00	; 0
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	53 e4       	ldi	r21, 0x43	; 67
 192:	69 81       	ldd	r22, Y+1	; 0x01
 194:	7a 81       	ldd	r23, Y+2	; 0x02
 196:	8b 81       	ldd	r24, Y+3	; 0x03
 198:	9c 81       	ldd	r25, Y+4	; 0x04
 19a:	c2 d2       	rcall	.+1412   	; 0x720 <__mulsf3>
 19c:	dc 01       	movw	r26, r24
 19e:	cb 01       	movw	r24, r22
 1a0:	9c 01       	movw	r18, r24
 1a2:	ad 01       	movw	r20, r26
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	74 e2       	ldi	r23, 0x24	; 36
 1a8:	84 ef       	ldi	r24, 0xF4	; 244
 1aa:	9a e4       	ldi	r25, 0x4A	; 74
 1ac:	a7 d1       	rcall	.+846    	; 0x4fc <__divsf3>
 1ae:	dc 01       	movw	r26, r24
 1b0:	cb 01       	movw	r24, r22
 1b2:	bc 01       	movw	r22, r24
 1b4:	cd 01       	movw	r24, r26
 1b6:	0a d2       	rcall	.+1044   	; 0x5cc <__fixsfsi>
 1b8:	dc 01       	movw	r26, r24
 1ba:	cb 01       	movw	r24, r22
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f8 01       	movw	r30, r16
 1c0:	91 83       	std	Z+1, r25	; 0x01
 1c2:	80 83       	st	Z, r24
 1c4:	84 e9       	ldi	r24, 0x94	; 148
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	fc 01       	movw	r30, r24
 1ca:	11 82       	std	Z+1, r1	; 0x01
 1cc:	10 82       	st	Z, r1
 1ce:	89 81       	ldd	r24, Y+1	; 0x01
 1d0:	9a 81       	ldd	r25, Y+2	; 0x02
 1d2:	ab 81       	ldd	r26, Y+3	; 0x03
 1d4:	bc 81       	ldd	r27, Y+4	; 0x04
 1d6:	80 93 24 01 	sts	0x0124, r24
 1da:	90 93 25 01 	sts	0x0125, r25
 1de:	a0 93 26 01 	sts	0x0126, r26
 1e2:	b0 93 27 01 	sts	0x0127, r27
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	1f 91       	pop	r17
 1f4:	0f 91       	pop	r16
 1f6:	08 95       	ret

000001f8 <PWM_on>:
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	cd b7       	in	r28, 0x3d	; 61
 1fe:	de b7       	in	r29, 0x3e	; 62
 200:	80 e9       	ldi	r24, 0x90	; 144
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	20 e4       	ldi	r18, 0x40	; 64
 206:	fc 01       	movw	r30, r24
 208:	20 83       	st	Z, r18
 20a:	81 e9       	ldi	r24, 0x91	; 145
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	2b e0       	ldi	r18, 0x0B	; 11
 210:	fc 01       	movw	r30, r24
 212:	20 83       	st	Z, r18
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	cb 01       	movw	r24, r22
 21a:	56 df       	rcall	.-340    	; 0xc8 <set_PWM>
 21c:	df 91       	pop	r29
 21e:	cf 91       	pop	r28
 220:	08 95       	ret

00000222 <PWM_State_machine>:
unsigned char button1 = 0x00;
unsigned char button2 = 0x00;
unsigned char total = 0;
unsigned char temp = 0x04;

void PWM_State_machine() {
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	cd b7       	in	r28, 0x3d	; 61
 228:	de b7       	in	r29, 0x3e	; 62
	button0 = ~PINA & 0x01; //connects PA0 to A0
 22a:	80 e2       	ldi	r24, 0x20	; 32
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	fc 01       	movw	r30, r24
 230:	80 81       	ld	r24, Z
 232:	88 2f       	mov	r24, r24
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	81 70       	andi	r24, 0x01	; 1
 238:	99 27       	eor	r25, r25
 23a:	21 e0       	ldi	r18, 0x01	; 1
 23c:	00 97       	sbiw	r24, 0x00	; 0
 23e:	09 f0       	breq	.+2      	; 0x242 <PWM_State_machine+0x20>
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	82 2f       	mov	r24, r18
 244:	80 93 21 01 	sts	0x0121, r24
	button1 = ~PINA & 0x02; //connects PA1 to A1
 248:	80 e2       	ldi	r24, 0x20	; 32
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	fc 01       	movw	r30, r24
 24e:	80 81       	ld	r24, Z
 250:	80 95       	com	r24
 252:	82 70       	andi	r24, 0x02	; 2
 254:	80 93 22 01 	sts	0x0122, r24
	button2 = ~PINA & 0x04; //connects PA1 to A2
 258:	80 e2       	ldi	r24, 0x20	; 32
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	fc 01       	movw	r30, r24
 25e:	80 81       	ld	r24, Z
 260:	80 95       	com	r24
 262:	84 70       	andi	r24, 0x04	; 4
 264:	80 93 23 01 	sts	0x0123, r24
	
	switch(SM1_State) { // Transitions
 268:	80 91 28 01 	lds	r24, 0x0128
 26c:	88 2f       	mov	r24, r24
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	82 30       	cpi	r24, 0x02	; 2
 272:	91 05       	cpc	r25, r1
 274:	09 f4       	brne	.+2      	; 0x278 <PWM_State_machine+0x56>
 276:	51 c0       	rjmp	.+162    	; 0x31a <PWM_State_machine+0xf8>
 278:	83 30       	cpi	r24, 0x03	; 3
 27a:	91 05       	cpc	r25, r1
 27c:	34 f4       	brge	.+12     	; 0x28a <PWM_State_machine+0x68>
 27e:	00 97       	sbiw	r24, 0x00	; 0
 280:	89 f0       	breq	.+34     	; 0x2a4 <PWM_State_machine+0x82>
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	91 05       	cpc	r25, r1
 286:	31 f1       	breq	.+76     	; 0x2d4 <PWM_State_machine+0xb2>
 288:	ce c0       	rjmp	.+412    	; 0x426 <PWM_State_machine+0x204>
 28a:	84 30       	cpi	r24, 0x04	; 4
 28c:	91 05       	cpc	r25, r1
 28e:	09 f4       	brne	.+2      	; 0x292 <PWM_State_machine+0x70>
 290:	9a c0       	rjmp	.+308    	; 0x3c6 <PWM_State_machine+0x1a4>
 292:	84 30       	cpi	r24, 0x04	; 4
 294:	91 05       	cpc	r25, r1
 296:	0c f4       	brge	.+2      	; 0x29a <PWM_State_machine+0x78>
 298:	50 c0       	rjmp	.+160    	; 0x33a <PWM_State_machine+0x118>
 29a:	85 30       	cpi	r24, 0x05	; 5
 29c:	91 05       	cpc	r25, r1
 29e:	09 f4       	brne	.+2      	; 0x2a2 <PWM_State_machine+0x80>
 2a0:	aa c0       	rjmp	.+340    	; 0x3f6 <PWM_State_machine+0x1d4>
 2a2:	c1 c0       	rjmp	.+386    	; 0x426 <PWM_State_machine+0x204>
		
		case init:
		if (button0 && !button1 && !button2)
 2a4:	80 91 21 01 	lds	r24, 0x0121
 2a8:	88 23       	and	r24, r24
 2aa:	61 f0       	breq	.+24     	; 0x2c4 <PWM_State_machine+0xa2>
 2ac:	80 91 22 01 	lds	r24, 0x0122
 2b0:	88 23       	and	r24, r24
 2b2:	41 f4       	brne	.+16     	; 0x2c4 <PWM_State_machine+0xa2>
 2b4:	80 91 23 01 	lds	r24, 0x0123
 2b8:	88 23       	and	r24, r24
 2ba:	21 f4       	brne	.+8      	; 0x2c4 <PWM_State_machine+0xa2>
		{
			SM1_State = init_wait;
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	80 93 28 01 	sts	0x0128, r24
		}
		else if(!button0)
		{
			SM1_State = init;
		}
		break;
 2c2:	b4 c0       	rjmp	.+360    	; 0x42c <PWM_State_machine+0x20a>
		case init:
		if (button0 && !button1 && !button2)
		{
			SM1_State = init_wait;
		}
		else if(!button0)
 2c4:	80 91 21 01 	lds	r24, 0x0121
 2c8:	88 23       	and	r24, r24
 2ca:	09 f0       	breq	.+2      	; 0x2ce <PWM_State_machine+0xac>
 2cc:	af c0       	rjmp	.+350    	; 0x42c <PWM_State_machine+0x20a>
		{
			SM1_State = init;
 2ce:	10 92 28 01 	sts	0x0128, r1
		}
		break;
 2d2:	ac c0       	rjmp	.+344    	; 0x42c <PWM_State_machine+0x20a>
		
		case init_wait:
		if (button0 && !button1 && !button2)
 2d4:	80 91 21 01 	lds	r24, 0x0121
 2d8:	88 23       	and	r24, r24
 2da:	61 f0       	breq	.+24     	; 0x2f4 <PWM_State_machine+0xd2>
 2dc:	80 91 22 01 	lds	r24, 0x0122
 2e0:	88 23       	and	r24, r24
 2e2:	41 f4       	brne	.+16     	; 0x2f4 <PWM_State_machine+0xd2>
 2e4:	80 91 23 01 	lds	r24, 0x0123
 2e8:	88 23       	and	r24, r24
 2ea:	21 f4       	brne	.+8      	; 0x2f4 <PWM_State_machine+0xd2>
		{
			SM1_State = init_wait;
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	80 93 28 01 	sts	0x0128, r24
		}
		else if (!button0 && !button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 2f2:	9e c0       	rjmp	.+316    	; 0x430 <PWM_State_machine+0x20e>
		case init_wait:
		if (button0 && !button1 && !button2)
		{
			SM1_State = init_wait;
		}
		else if (!button0 && !button1 && !button2)
 2f4:	80 91 21 01 	lds	r24, 0x0121
 2f8:	88 23       	and	r24, r24
 2fa:	09 f0       	breq	.+2      	; 0x2fe <PWM_State_machine+0xdc>
 2fc:	99 c0       	rjmp	.+306    	; 0x430 <PWM_State_machine+0x20e>
 2fe:	80 91 22 01 	lds	r24, 0x0122
 302:	88 23       	and	r24, r24
 304:	09 f0       	breq	.+2      	; 0x308 <PWM_State_machine+0xe6>
 306:	94 c0       	rjmp	.+296    	; 0x430 <PWM_State_machine+0x20e>
 308:	80 91 23 01 	lds	r24, 0x0123
 30c:	88 23       	and	r24, r24
 30e:	09 f0       	breq	.+2      	; 0x312 <PWM_State_machine+0xf0>
 310:	8f c0       	rjmp	.+286    	; 0x430 <PWM_State_machine+0x20e>
		{
			SM1_State = sound;
 312:	83 e0       	ldi	r24, 0x03	; 3
 314:	80 93 28 01 	sts	0x0128, r24
		}
		break;
 318:	8b c0       	rjmp	.+278    	; 0x430 <PWM_State_machine+0x20e>
		
		case init_back_wait:
		if (button0)
 31a:	80 91 21 01 	lds	r24, 0x0121
 31e:	88 23       	and	r24, r24
 320:	21 f0       	breq	.+8      	; 0x32a <PWM_State_machine+0x108>
		{
			SM1_State = init_back_wait;
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	80 93 28 01 	sts	0x0128, r24
		}
		else if (!button0)
		{
			SM1_State = init;
		}
		break;
 328:	85 c0       	rjmp	.+266    	; 0x434 <PWM_State_machine+0x212>
		case init_back_wait:
		if (button0)
		{
			SM1_State = init_back_wait;
		}
		else if (!button0)
 32a:	80 91 21 01 	lds	r24, 0x0121
 32e:	88 23       	and	r24, r24
 330:	09 f0       	breq	.+2      	; 0x334 <PWM_State_machine+0x112>
 332:	80 c0       	rjmp	.+256    	; 0x434 <PWM_State_machine+0x212>
		{
			SM1_State = init;
 334:	10 92 28 01 	sts	0x0128, r1
		}
		break;
 338:	7d c0       	rjmp	.+250    	; 0x434 <PWM_State_machine+0x212>
		
		case sound:
		if (button0)
 33a:	80 91 21 01 	lds	r24, 0x0121
 33e:	88 23       	and	r24, r24
 340:	21 f0       	breq	.+8      	; 0x34a <PWM_State_machine+0x128>
		{
			SM1_State = init_back_wait;
 342:	82 e0       	ldi	r24, 0x02	; 2
 344:	80 93 28 01 	sts	0x0128, r24
		}
		else if (!button0 && !button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 348:	77 c0       	rjmp	.+238    	; 0x438 <PWM_State_machine+0x216>
		case sound:
		if (button0)
		{
			SM1_State = init_back_wait;
		}
		else if (button1 && !button2)
 34a:	80 91 22 01 	lds	r24, 0x0122
 34e:	88 23       	and	r24, r24
 350:	89 f0       	breq	.+34     	; 0x374 <PWM_State_machine+0x152>
 352:	80 91 23 01 	lds	r24, 0x0123
 356:	88 23       	and	r24, r24
 358:	69 f4       	brne	.+26     	; 0x374 <PWM_State_machine+0x152>
		{
			SM1_State = up_wait;
 35a:	84 e0       	ldi	r24, 0x04	; 4
 35c:	80 93 28 01 	sts	0x0128, r24
			if(count < 7)
 360:	80 91 20 01 	lds	r24, 0x0120
 364:	87 30       	cpi	r24, 0x07	; 7
 366:	70 f5       	brcc	.+92     	; 0x3c4 <PWM_State_machine+0x1a2>
			{
				count++;
 368:	80 91 20 01 	lds	r24, 0x0120
 36c:	8f 5f       	subi	r24, 0xFF	; 255
 36e:	80 93 20 01 	sts	0x0120, r24
			SM1_State = init_back_wait;
		}
		else if (button1 && !button2)
		{
			SM1_State = up_wait;
			if(count < 7)
 372:	28 c0       	rjmp	.+80     	; 0x3c4 <PWM_State_machine+0x1a2>
			{
				count++;
			}
		}
		else if (!button1 && button2)
 374:	80 91 22 01 	lds	r24, 0x0122
 378:	88 23       	and	r24, r24
 37a:	89 f4       	brne	.+34     	; 0x39e <PWM_State_machine+0x17c>
 37c:	80 91 23 01 	lds	r24, 0x0123
 380:	88 23       	and	r24, r24
 382:	69 f0       	breq	.+26     	; 0x39e <PWM_State_machine+0x17c>
		{
			SM1_State = down_wait;
 384:	85 e0       	ldi	r24, 0x05	; 5
 386:	80 93 28 01 	sts	0x0128, r24
			if(count > 0)
 38a:	80 91 20 01 	lds	r24, 0x0120
 38e:	88 23       	and	r24, r24
 390:	c9 f0       	breq	.+50     	; 0x3c4 <PWM_State_machine+0x1a2>
			{
				count--;
 392:	80 91 20 01 	lds	r24, 0x0120
 396:	81 50       	subi	r24, 0x01	; 1
 398:	80 93 20 01 	sts	0x0120, r24
			}
		}
		else if (!button1 && button2)
		{
			SM1_State = down_wait;
			if(count > 0)
 39c:	13 c0       	rjmp	.+38     	; 0x3c4 <PWM_State_machine+0x1a2>
			{
				count--;
			}
		}
		else if (!button0 && !button1 && !button2)
 39e:	80 91 21 01 	lds	r24, 0x0121
 3a2:	88 23       	and	r24, r24
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <PWM_State_machine+0x186>
 3a6:	48 c0       	rjmp	.+144    	; 0x438 <PWM_State_machine+0x216>
 3a8:	80 91 22 01 	lds	r24, 0x0122
 3ac:	88 23       	and	r24, r24
 3ae:	09 f0       	breq	.+2      	; 0x3b2 <PWM_State_machine+0x190>
 3b0:	43 c0       	rjmp	.+134    	; 0x438 <PWM_State_machine+0x216>
 3b2:	80 91 23 01 	lds	r24, 0x0123
 3b6:	88 23       	and	r24, r24
 3b8:	09 f0       	breq	.+2      	; 0x3bc <PWM_State_machine+0x19a>
 3ba:	3e c0       	rjmp	.+124    	; 0x438 <PWM_State_machine+0x216>
		{
			SM1_State = sound;
 3bc:	83 e0       	ldi	r24, 0x03	; 3
 3be:	80 93 28 01 	sts	0x0128, r24
		}
		break;
 3c2:	3a c0       	rjmp	.+116    	; 0x438 <PWM_State_machine+0x216>
 3c4:	39 c0       	rjmp	.+114    	; 0x438 <PWM_State_machine+0x216>
		
		case up_wait:
		if (button1 && !button2)
 3c6:	80 91 22 01 	lds	r24, 0x0122
 3ca:	88 23       	and	r24, r24
 3cc:	41 f0       	breq	.+16     	; 0x3de <PWM_State_machine+0x1bc>
 3ce:	80 91 23 01 	lds	r24, 0x0123
 3d2:	88 23       	and	r24, r24
 3d4:	21 f4       	brne	.+8      	; 0x3de <PWM_State_machine+0x1bc>
		{
			SM1_State = up_wait;
 3d6:	84 e0       	ldi	r24, 0x04	; 4
 3d8:	80 93 28 01 	sts	0x0128, r24
		}
		else if (!button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 3dc:	2f c0       	rjmp	.+94     	; 0x43c <PWM_State_machine+0x21a>
		case up_wait:
		if (button1 && !button2)
		{
			SM1_State = up_wait;
		}
		else if (!button1 && !button2)
 3de:	80 91 22 01 	lds	r24, 0x0122
 3e2:	88 23       	and	r24, r24
 3e4:	59 f5       	brne	.+86     	; 0x43c <PWM_State_machine+0x21a>
 3e6:	80 91 23 01 	lds	r24, 0x0123
 3ea:	88 23       	and	r24, r24
 3ec:	39 f5       	brne	.+78     	; 0x43c <PWM_State_machine+0x21a>
		{
			SM1_State = sound;
 3ee:	83 e0       	ldi	r24, 0x03	; 3
 3f0:	80 93 28 01 	sts	0x0128, r24
		}
		break;
 3f4:	23 c0       	rjmp	.+70     	; 0x43c <PWM_State_machine+0x21a>
		
		case down_wait:
		if (!button1 && button2)
 3f6:	80 91 22 01 	lds	r24, 0x0122
 3fa:	88 23       	and	r24, r24
 3fc:	41 f4       	brne	.+16     	; 0x40e <PWM_State_machine+0x1ec>
 3fe:	80 91 23 01 	lds	r24, 0x0123
 402:	88 23       	and	r24, r24
 404:	21 f0       	breq	.+8      	; 0x40e <PWM_State_machine+0x1ec>
		{
			SM1_State = down_wait;
 406:	85 e0       	ldi	r24, 0x05	; 5
 408:	80 93 28 01 	sts	0x0128, r24
		}
		else if (!button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 40c:	19 c0       	rjmp	.+50     	; 0x440 <PWM_State_machine+0x21e>
		case down_wait:
		if (!button1 && button2)
		{
			SM1_State = down_wait;
		}
		else if (!button1 && !button2)
 40e:	80 91 22 01 	lds	r24, 0x0122
 412:	88 23       	and	r24, r24
 414:	a9 f4       	brne	.+42     	; 0x440 <PWM_State_machine+0x21e>
 416:	80 91 23 01 	lds	r24, 0x0123
 41a:	88 23       	and	r24, r24
 41c:	89 f4       	brne	.+34     	; 0x440 <PWM_State_machine+0x21e>
		{
			SM1_State = sound;
 41e:	83 e0       	ldi	r24, 0x03	; 3
 420:	80 93 28 01 	sts	0x0128, r24
		}
		break;
 424:	0d c0       	rjmp	.+26     	; 0x440 <PWM_State_machine+0x21e>
		
		default:
		SM1_State = init;
 426:	10 92 28 01 	sts	0x0128, r1
 42a:	0b c0       	rjmp	.+22     	; 0x442 <PWM_State_machine+0x220>
		}
		else if(!button0)
		{
			SM1_State = init;
		}
		break;
 42c:	00 00       	nop
 42e:	09 c0       	rjmp	.+18     	; 0x442 <PWM_State_machine+0x220>
		}
		else if (!button0 && !button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 430:	00 00       	nop
 432:	07 c0       	rjmp	.+14     	; 0x442 <PWM_State_machine+0x220>
		}
		else if (!button0)
		{
			SM1_State = init;
		}
		break;
 434:	00 00       	nop
 436:	05 c0       	rjmp	.+10     	; 0x442 <PWM_State_machine+0x220>
		}
		else if (!button0 && !button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 438:	00 00       	nop
 43a:	03 c0       	rjmp	.+6      	; 0x442 <PWM_State_machine+0x220>
		}
		else if (!button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 43c:	00 00       	nop
 43e:	01 c0       	rjmp	.+2      	; 0x442 <PWM_State_machine+0x220>
		}
		else if (!button1 && !button2)
		{
			SM1_State = sound;
		}
		break;
 440:	00 00       	nop
		
		default:
		SM1_State = init;
	} // Transitions

	switch(SM1_State) { // State actions
 442:	80 91 28 01 	lds	r24, 0x0128
 446:	88 2f       	mov	r24, r24
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	82 30       	cpi	r24, 0x02	; 2
 44c:	91 05       	cpc	r25, r1
 44e:	d1 f0       	breq	.+52     	; 0x484 <PWM_State_machine+0x262>
 450:	83 30       	cpi	r24, 0x03	; 3
 452:	91 05       	cpc	r25, r1
 454:	34 f4       	brge	.+12     	; 0x462 <PWM_State_machine+0x240>
 456:	00 97       	sbiw	r24, 0x00	; 0
 458:	59 f0       	breq	.+22     	; 0x470 <PWM_State_machine+0x24e>
 45a:	81 30       	cpi	r24, 0x01	; 1
 45c:	91 05       	cpc	r25, r1
 45e:	69 f0       	breq	.+26     	; 0x47a <PWM_State_machine+0x258>
 460:	2a c0       	rjmp	.+84     	; 0x4b6 <PWM_State_machine+0x294>
 462:	84 30       	cpi	r24, 0x04	; 4
 464:	91 05       	cpc	r25, r1
 466:	31 f1       	breq	.+76     	; 0x4b4 <PWM_State_machine+0x292>
 468:	84 30       	cpi	r24, 0x04	; 4
 46a:	91 05       	cpc	r25, r1
 46c:	84 f0       	brlt	.+32     	; 0x48e <PWM_State_machine+0x26c>
		
		case up_wait:
		break;
		
		case down_wait:
		break;
 46e:	23 c0       	rjmp	.+70     	; 0x4b6 <PWM_State_machine+0x294>
	} // Transitions

	switch(SM1_State) { // State actions
		// init, init_wait, init_back_wait, sound, up_wait, down_wait
		case init:
		set_PWM(0);
 470:	60 e0       	ldi	r22, 0x00	; 0
 472:	70 e0       	ldi	r23, 0x00	; 0
 474:	cb 01       	movw	r24, r22
 476:	28 de       	rcall	.-944    	; 0xc8 <set_PWM>
		break;
 478:	1e c0       	rjmp	.+60     	; 0x4b6 <PWM_State_machine+0x294>
		
		case init_wait:
		set_PWM(0);
 47a:	60 e0       	ldi	r22, 0x00	; 0
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	cb 01       	movw	r24, r22
 480:	23 de       	rcall	.-954    	; 0xc8 <set_PWM>
		break;
 482:	19 c0       	rjmp	.+50     	; 0x4b6 <PWM_State_machine+0x294>
		
		case init_back_wait:
		set_PWM(0);
 484:	60 e0       	ldi	r22, 0x00	; 0
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	cb 01       	movw	r24, r22
 48a:	1e de       	rcall	.-964    	; 0xc8 <set_PWM>
		break;
 48c:	14 c0       	rjmp	.+40     	; 0x4b6 <PWM_State_machine+0x294>
		
		case sound:
		set_PWM(arr[count]);
 48e:	80 91 20 01 	lds	r24, 0x0120
 492:	88 2f       	mov	r24, r24
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	88 0f       	add	r24, r24
 498:	99 1f       	adc	r25, r25
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	80 50       	subi	r24, 0x00	; 0
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	fc 01       	movw	r30, r24
 4a4:	80 81       	ld	r24, Z
 4a6:	91 81       	ldd	r25, Z+1	; 0x01
 4a8:	a2 81       	ldd	r26, Z+2	; 0x02
 4aa:	b3 81       	ldd	r27, Z+3	; 0x03
 4ac:	bc 01       	movw	r22, r24
 4ae:	cd 01       	movw	r24, r26
 4b0:	0b de       	rcall	.-1002   	; 0xc8 <set_PWM>
		break;
 4b2:	01 c0       	rjmp	.+2      	; 0x4b6 <PWM_State_machine+0x294>
		
		case up_wait:
		break;
 4b4:	00 00       	nop
		case down_wait:
		break;

	} // State actions

}
 4b6:	df 91       	pop	r29
 4b8:	cf 91       	pop	r28
 4ba:	08 95       	ret

000004bc <main>:



int main(void)
{
 4bc:	cf 93       	push	r28
 4be:	df 93       	push	r29
 4c0:	cd b7       	in	r28, 0x3d	; 61
 4c2:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF;
 4c4:	84 e2       	ldi	r24, 0x24	; 36
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	2f ef       	ldi	r18, 0xFF	; 255
 4ca:	fc 01       	movw	r30, r24
 4cc:	20 83       	st	Z, r18
	PORTB = 0xFF;
 4ce:	85 e2       	ldi	r24, 0x25	; 37
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	2f ef       	ldi	r18, 0xFF	; 255
 4d4:	fc 01       	movw	r30, r24
 4d6:	20 83       	st	Z, r18
	
	DDRA = 0x00;
 4d8:	81 e2       	ldi	r24, 0x21	; 33
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	fc 01       	movw	r30, r24
 4de:	10 82       	st	Z, r1
	PORTA = 0xFF;
 4e0:	82 e2       	ldi	r24, 0x22	; 34
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	2f ef       	ldi	r18, 0xFF	; 255
 4e6:	fc 01       	movw	r30, r24
 4e8:	20 83       	st	Z, r18
	
	//TimerSet(2);
	//TimerOn();
	
	SM1_State = init;
 4ea:	10 92 28 01 	sts	0x0128, r1
	
	PWM_on();
 4ee:	84 de       	rcall	.-760    	; 0x1f8 <PWM_on>
    while(1)
    {
		PWM_State_machine();
 4f0:	98 de       	rcall	.-720    	; 0x222 <PWM_State_machine>
		//while(!TimerFlag) {}
		//TimerFlag = 0;
    }
 4f2:	fe cf       	rjmp	.-4      	; 0x4f0 <main+0x34>

000004f4 <__cmpsf2>:
 4f4:	9c d0       	rcall	.+312    	; 0x62e <__fp_cmp>
 4f6:	08 f4       	brcc	.+2      	; 0x4fa <__cmpsf2+0x6>
 4f8:	81 e0       	ldi	r24, 0x01	; 1
 4fa:	08 95       	ret

000004fc <__divsf3>:
 4fc:	0c d0       	rcall	.+24     	; 0x516 <__divsf3x>
 4fe:	d2 c0       	rjmp	.+420    	; 0x6a4 <__fp_round>
 500:	ca d0       	rcall	.+404    	; 0x696 <__fp_pscB>
 502:	40 f0       	brcs	.+16     	; 0x514 <__divsf3+0x18>
 504:	c1 d0       	rcall	.+386    	; 0x688 <__fp_pscA>
 506:	30 f0       	brcs	.+12     	; 0x514 <__divsf3+0x18>
 508:	21 f4       	brne	.+8      	; 0x512 <__divsf3+0x16>
 50a:	5f 3f       	cpi	r21, 0xFF	; 255
 50c:	19 f0       	breq	.+6      	; 0x514 <__divsf3+0x18>
 50e:	b3 c0       	rjmp	.+358    	; 0x676 <__fp_inf>
 510:	51 11       	cpse	r21, r1
 512:	fc c0       	rjmp	.+504    	; 0x70c <__fp_szero>
 514:	b6 c0       	rjmp	.+364    	; 0x682 <__fp_nan>

00000516 <__divsf3x>:
 516:	d7 d0       	rcall	.+430    	; 0x6c6 <__fp_split3>
 518:	98 f3       	brcs	.-26     	; 0x500 <__divsf3+0x4>

0000051a <__divsf3_pse>:
 51a:	99 23       	and	r25, r25
 51c:	c9 f3       	breq	.-14     	; 0x510 <__divsf3+0x14>
 51e:	55 23       	and	r21, r21
 520:	b1 f3       	breq	.-20     	; 0x50e <__divsf3+0x12>
 522:	95 1b       	sub	r25, r21
 524:	55 0b       	sbc	r21, r21
 526:	bb 27       	eor	r27, r27
 528:	aa 27       	eor	r26, r26
 52a:	62 17       	cp	r22, r18
 52c:	73 07       	cpc	r23, r19
 52e:	84 07       	cpc	r24, r20
 530:	38 f0       	brcs	.+14     	; 0x540 <__divsf3_pse+0x26>
 532:	9f 5f       	subi	r25, 0xFF	; 255
 534:	5f 4f       	sbci	r21, 0xFF	; 255
 536:	22 0f       	add	r18, r18
 538:	33 1f       	adc	r19, r19
 53a:	44 1f       	adc	r20, r20
 53c:	aa 1f       	adc	r26, r26
 53e:	a9 f3       	breq	.-22     	; 0x52a <__divsf3_pse+0x10>
 540:	33 d0       	rcall	.+102    	; 0x5a8 <__divsf3_pse+0x8e>
 542:	0e 2e       	mov	r0, r30
 544:	3a f0       	brmi	.+14     	; 0x554 <__divsf3_pse+0x3a>
 546:	e0 e8       	ldi	r30, 0x80	; 128
 548:	30 d0       	rcall	.+96     	; 0x5aa <__divsf3_pse+0x90>
 54a:	91 50       	subi	r25, 0x01	; 1
 54c:	50 40       	sbci	r21, 0x00	; 0
 54e:	e6 95       	lsr	r30
 550:	00 1c       	adc	r0, r0
 552:	ca f7       	brpl	.-14     	; 0x546 <__divsf3_pse+0x2c>
 554:	29 d0       	rcall	.+82     	; 0x5a8 <__divsf3_pse+0x8e>
 556:	fe 2f       	mov	r31, r30
 558:	27 d0       	rcall	.+78     	; 0x5a8 <__divsf3_pse+0x8e>
 55a:	66 0f       	add	r22, r22
 55c:	77 1f       	adc	r23, r23
 55e:	88 1f       	adc	r24, r24
 560:	bb 1f       	adc	r27, r27
 562:	26 17       	cp	r18, r22
 564:	37 07       	cpc	r19, r23
 566:	48 07       	cpc	r20, r24
 568:	ab 07       	cpc	r26, r27
 56a:	b0 e8       	ldi	r27, 0x80	; 128
 56c:	09 f0       	breq	.+2      	; 0x570 <__divsf3_pse+0x56>
 56e:	bb 0b       	sbc	r27, r27
 570:	80 2d       	mov	r24, r0
 572:	bf 01       	movw	r22, r30
 574:	ff 27       	eor	r31, r31
 576:	93 58       	subi	r25, 0x83	; 131
 578:	5f 4f       	sbci	r21, 0xFF	; 255
 57a:	2a f0       	brmi	.+10     	; 0x586 <__divsf3_pse+0x6c>
 57c:	9e 3f       	cpi	r25, 0xFE	; 254
 57e:	51 05       	cpc	r21, r1
 580:	68 f0       	brcs	.+26     	; 0x59c <__divsf3_pse+0x82>
 582:	79 c0       	rjmp	.+242    	; 0x676 <__fp_inf>
 584:	c3 c0       	rjmp	.+390    	; 0x70c <__fp_szero>
 586:	5f 3f       	cpi	r21, 0xFF	; 255
 588:	ec f3       	brlt	.-6      	; 0x584 <__divsf3_pse+0x6a>
 58a:	98 3e       	cpi	r25, 0xE8	; 232
 58c:	dc f3       	brlt	.-10     	; 0x584 <__divsf3_pse+0x6a>
 58e:	86 95       	lsr	r24
 590:	77 95       	ror	r23
 592:	67 95       	ror	r22
 594:	b7 95       	ror	r27
 596:	f7 95       	ror	r31
 598:	9f 5f       	subi	r25, 0xFF	; 255
 59a:	c9 f7       	brne	.-14     	; 0x58e <__divsf3_pse+0x74>
 59c:	88 0f       	add	r24, r24
 59e:	91 1d       	adc	r25, r1
 5a0:	96 95       	lsr	r25
 5a2:	87 95       	ror	r24
 5a4:	97 f9       	bld	r25, 7
 5a6:	08 95       	ret
 5a8:	e1 e0       	ldi	r30, 0x01	; 1
 5aa:	66 0f       	add	r22, r22
 5ac:	77 1f       	adc	r23, r23
 5ae:	88 1f       	adc	r24, r24
 5b0:	bb 1f       	adc	r27, r27
 5b2:	62 17       	cp	r22, r18
 5b4:	73 07       	cpc	r23, r19
 5b6:	84 07       	cpc	r24, r20
 5b8:	ba 07       	cpc	r27, r26
 5ba:	20 f0       	brcs	.+8      	; 0x5c4 <__divsf3_pse+0xaa>
 5bc:	62 1b       	sub	r22, r18
 5be:	73 0b       	sbc	r23, r19
 5c0:	84 0b       	sbc	r24, r20
 5c2:	ba 0b       	sbc	r27, r26
 5c4:	ee 1f       	adc	r30, r30
 5c6:	88 f7       	brcc	.-30     	; 0x5aa <__divsf3_pse+0x90>
 5c8:	e0 95       	com	r30
 5ca:	08 95       	ret

000005cc <__fixsfsi>:
 5cc:	04 d0       	rcall	.+8      	; 0x5d6 <__fixunssfsi>
 5ce:	68 94       	set
 5d0:	b1 11       	cpse	r27, r1
 5d2:	9c c0       	rjmp	.+312    	; 0x70c <__fp_szero>
 5d4:	08 95       	ret

000005d6 <__fixunssfsi>:
 5d6:	7f d0       	rcall	.+254    	; 0x6d6 <__fp_splitA>
 5d8:	88 f0       	brcs	.+34     	; 0x5fc <__fixunssfsi+0x26>
 5da:	9f 57       	subi	r25, 0x7F	; 127
 5dc:	90 f0       	brcs	.+36     	; 0x602 <__fixunssfsi+0x2c>
 5de:	b9 2f       	mov	r27, r25
 5e0:	99 27       	eor	r25, r25
 5e2:	b7 51       	subi	r27, 0x17	; 23
 5e4:	a0 f0       	brcs	.+40     	; 0x60e <__fixunssfsi+0x38>
 5e6:	d1 f0       	breq	.+52     	; 0x61c <__fixunssfsi+0x46>
 5e8:	66 0f       	add	r22, r22
 5ea:	77 1f       	adc	r23, r23
 5ec:	88 1f       	adc	r24, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	1a f0       	brmi	.+6      	; 0x5f8 <__fixunssfsi+0x22>
 5f2:	ba 95       	dec	r27
 5f4:	c9 f7       	brne	.-14     	; 0x5e8 <__fixunssfsi+0x12>
 5f6:	12 c0       	rjmp	.+36     	; 0x61c <__fixunssfsi+0x46>
 5f8:	b1 30       	cpi	r27, 0x01	; 1
 5fa:	81 f0       	breq	.+32     	; 0x61c <__fixunssfsi+0x46>
 5fc:	86 d0       	rcall	.+268    	; 0x70a <__fp_zero>
 5fe:	b1 e0       	ldi	r27, 0x01	; 1
 600:	08 95       	ret
 602:	83 c0       	rjmp	.+262    	; 0x70a <__fp_zero>
 604:	67 2f       	mov	r22, r23
 606:	78 2f       	mov	r23, r24
 608:	88 27       	eor	r24, r24
 60a:	b8 5f       	subi	r27, 0xF8	; 248
 60c:	39 f0       	breq	.+14     	; 0x61c <__fixunssfsi+0x46>
 60e:	b9 3f       	cpi	r27, 0xF9	; 249
 610:	cc f3       	brlt	.-14     	; 0x604 <__fixunssfsi+0x2e>
 612:	86 95       	lsr	r24
 614:	77 95       	ror	r23
 616:	67 95       	ror	r22
 618:	b3 95       	inc	r27
 61a:	d9 f7       	brne	.-10     	; 0x612 <__fixunssfsi+0x3c>
 61c:	3e f4       	brtc	.+14     	; 0x62c <__fixunssfsi+0x56>
 61e:	90 95       	com	r25
 620:	80 95       	com	r24
 622:	70 95       	com	r23
 624:	61 95       	neg	r22
 626:	7f 4f       	sbci	r23, 0xFF	; 255
 628:	8f 4f       	sbci	r24, 0xFF	; 255
 62a:	9f 4f       	sbci	r25, 0xFF	; 255
 62c:	08 95       	ret

0000062e <__fp_cmp>:
 62e:	99 0f       	add	r25, r25
 630:	00 08       	sbc	r0, r0
 632:	55 0f       	add	r21, r21
 634:	aa 0b       	sbc	r26, r26
 636:	e0 e8       	ldi	r30, 0x80	; 128
 638:	fe ef       	ldi	r31, 0xFE	; 254
 63a:	16 16       	cp	r1, r22
 63c:	17 06       	cpc	r1, r23
 63e:	e8 07       	cpc	r30, r24
 640:	f9 07       	cpc	r31, r25
 642:	c0 f0       	brcs	.+48     	; 0x674 <__fp_cmp+0x46>
 644:	12 16       	cp	r1, r18
 646:	13 06       	cpc	r1, r19
 648:	e4 07       	cpc	r30, r20
 64a:	f5 07       	cpc	r31, r21
 64c:	98 f0       	brcs	.+38     	; 0x674 <__fp_cmp+0x46>
 64e:	62 1b       	sub	r22, r18
 650:	73 0b       	sbc	r23, r19
 652:	84 0b       	sbc	r24, r20
 654:	95 0b       	sbc	r25, r21
 656:	39 f4       	brne	.+14     	; 0x666 <__fp_cmp+0x38>
 658:	0a 26       	eor	r0, r26
 65a:	61 f0       	breq	.+24     	; 0x674 <__fp_cmp+0x46>
 65c:	23 2b       	or	r18, r19
 65e:	24 2b       	or	r18, r20
 660:	25 2b       	or	r18, r21
 662:	21 f4       	brne	.+8      	; 0x66c <__fp_cmp+0x3e>
 664:	08 95       	ret
 666:	0a 26       	eor	r0, r26
 668:	09 f4       	brne	.+2      	; 0x66c <__fp_cmp+0x3e>
 66a:	a1 40       	sbci	r26, 0x01	; 1
 66c:	a6 95       	lsr	r26
 66e:	8f ef       	ldi	r24, 0xFF	; 255
 670:	81 1d       	adc	r24, r1
 672:	81 1d       	adc	r24, r1
 674:	08 95       	ret

00000676 <__fp_inf>:
 676:	97 f9       	bld	r25, 7
 678:	9f 67       	ori	r25, 0x7F	; 127
 67a:	80 e8       	ldi	r24, 0x80	; 128
 67c:	70 e0       	ldi	r23, 0x00	; 0
 67e:	60 e0       	ldi	r22, 0x00	; 0
 680:	08 95       	ret

00000682 <__fp_nan>:
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	80 ec       	ldi	r24, 0xC0	; 192
 686:	08 95       	ret

00000688 <__fp_pscA>:
 688:	00 24       	eor	r0, r0
 68a:	0a 94       	dec	r0
 68c:	16 16       	cp	r1, r22
 68e:	17 06       	cpc	r1, r23
 690:	18 06       	cpc	r1, r24
 692:	09 06       	cpc	r0, r25
 694:	08 95       	ret

00000696 <__fp_pscB>:
 696:	00 24       	eor	r0, r0
 698:	0a 94       	dec	r0
 69a:	12 16       	cp	r1, r18
 69c:	13 06       	cpc	r1, r19
 69e:	14 06       	cpc	r1, r20
 6a0:	05 06       	cpc	r0, r21
 6a2:	08 95       	ret

000006a4 <__fp_round>:
 6a4:	09 2e       	mov	r0, r25
 6a6:	03 94       	inc	r0
 6a8:	00 0c       	add	r0, r0
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <__fp_round+0xc>
 6ac:	88 23       	and	r24, r24
 6ae:	52 f0       	brmi	.+20     	; 0x6c4 <__fp_round+0x20>
 6b0:	bb 0f       	add	r27, r27
 6b2:	40 f4       	brcc	.+16     	; 0x6c4 <__fp_round+0x20>
 6b4:	bf 2b       	or	r27, r31
 6b6:	11 f4       	brne	.+4      	; 0x6bc <__fp_round+0x18>
 6b8:	60 ff       	sbrs	r22, 0
 6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <__fp_round+0x20>
 6bc:	6f 5f       	subi	r22, 0xFF	; 255
 6be:	7f 4f       	sbci	r23, 0xFF	; 255
 6c0:	8f 4f       	sbci	r24, 0xFF	; 255
 6c2:	9f 4f       	sbci	r25, 0xFF	; 255
 6c4:	08 95       	ret

000006c6 <__fp_split3>:
 6c6:	57 fd       	sbrc	r21, 7
 6c8:	90 58       	subi	r25, 0x80	; 128
 6ca:	44 0f       	add	r20, r20
 6cc:	55 1f       	adc	r21, r21
 6ce:	59 f0       	breq	.+22     	; 0x6e6 <__fp_splitA+0x10>
 6d0:	5f 3f       	cpi	r21, 0xFF	; 255
 6d2:	71 f0       	breq	.+28     	; 0x6f0 <__fp_splitA+0x1a>
 6d4:	47 95       	ror	r20

000006d6 <__fp_splitA>:
 6d6:	88 0f       	add	r24, r24
 6d8:	97 fb       	bst	r25, 7
 6da:	99 1f       	adc	r25, r25
 6dc:	61 f0       	breq	.+24     	; 0x6f6 <__fp_splitA+0x20>
 6de:	9f 3f       	cpi	r25, 0xFF	; 255
 6e0:	79 f0       	breq	.+30     	; 0x700 <__fp_splitA+0x2a>
 6e2:	87 95       	ror	r24
 6e4:	08 95       	ret
 6e6:	12 16       	cp	r1, r18
 6e8:	13 06       	cpc	r1, r19
 6ea:	14 06       	cpc	r1, r20
 6ec:	55 1f       	adc	r21, r21
 6ee:	f2 cf       	rjmp	.-28     	; 0x6d4 <__fp_split3+0xe>
 6f0:	46 95       	lsr	r20
 6f2:	f1 df       	rcall	.-30     	; 0x6d6 <__fp_splitA>
 6f4:	08 c0       	rjmp	.+16     	; 0x706 <__fp_splitA+0x30>
 6f6:	16 16       	cp	r1, r22
 6f8:	17 06       	cpc	r1, r23
 6fa:	18 06       	cpc	r1, r24
 6fc:	99 1f       	adc	r25, r25
 6fe:	f1 cf       	rjmp	.-30     	; 0x6e2 <__fp_splitA+0xc>
 700:	86 95       	lsr	r24
 702:	71 05       	cpc	r23, r1
 704:	61 05       	cpc	r22, r1
 706:	08 94       	sec
 708:	08 95       	ret

0000070a <__fp_zero>:
 70a:	e8 94       	clt

0000070c <__fp_szero>:
 70c:	bb 27       	eor	r27, r27
 70e:	66 27       	eor	r22, r22
 710:	77 27       	eor	r23, r23
 712:	cb 01       	movw	r24, r22
 714:	97 f9       	bld	r25, 7
 716:	08 95       	ret

00000718 <__gesf2>:
 718:	8a df       	rcall	.-236    	; 0x62e <__fp_cmp>
 71a:	08 f4       	brcc	.+2      	; 0x71e <__gesf2+0x6>
 71c:	8f ef       	ldi	r24, 0xFF	; 255
 71e:	08 95       	ret

00000720 <__mulsf3>:
 720:	0b d0       	rcall	.+22     	; 0x738 <__mulsf3x>
 722:	c0 cf       	rjmp	.-128    	; 0x6a4 <__fp_round>
 724:	b1 df       	rcall	.-158    	; 0x688 <__fp_pscA>
 726:	28 f0       	brcs	.+10     	; 0x732 <__mulsf3+0x12>
 728:	b6 df       	rcall	.-148    	; 0x696 <__fp_pscB>
 72a:	18 f0       	brcs	.+6      	; 0x732 <__mulsf3+0x12>
 72c:	95 23       	and	r25, r21
 72e:	09 f0       	breq	.+2      	; 0x732 <__mulsf3+0x12>
 730:	a2 cf       	rjmp	.-188    	; 0x676 <__fp_inf>
 732:	a7 cf       	rjmp	.-178    	; 0x682 <__fp_nan>
 734:	11 24       	eor	r1, r1
 736:	ea cf       	rjmp	.-44     	; 0x70c <__fp_szero>

00000738 <__mulsf3x>:
 738:	c6 df       	rcall	.-116    	; 0x6c6 <__fp_split3>
 73a:	a0 f3       	brcs	.-24     	; 0x724 <__mulsf3+0x4>

0000073c <__mulsf3_pse>:
 73c:	95 9f       	mul	r25, r21
 73e:	d1 f3       	breq	.-12     	; 0x734 <__mulsf3+0x14>
 740:	95 0f       	add	r25, r21
 742:	50 e0       	ldi	r21, 0x00	; 0
 744:	55 1f       	adc	r21, r21
 746:	62 9f       	mul	r22, r18
 748:	f0 01       	movw	r30, r0
 74a:	72 9f       	mul	r23, r18
 74c:	bb 27       	eor	r27, r27
 74e:	f0 0d       	add	r31, r0
 750:	b1 1d       	adc	r27, r1
 752:	63 9f       	mul	r22, r19
 754:	aa 27       	eor	r26, r26
 756:	f0 0d       	add	r31, r0
 758:	b1 1d       	adc	r27, r1
 75a:	aa 1f       	adc	r26, r26
 75c:	64 9f       	mul	r22, r20
 75e:	66 27       	eor	r22, r22
 760:	b0 0d       	add	r27, r0
 762:	a1 1d       	adc	r26, r1
 764:	66 1f       	adc	r22, r22
 766:	82 9f       	mul	r24, r18
 768:	22 27       	eor	r18, r18
 76a:	b0 0d       	add	r27, r0
 76c:	a1 1d       	adc	r26, r1
 76e:	62 1f       	adc	r22, r18
 770:	73 9f       	mul	r23, r19
 772:	b0 0d       	add	r27, r0
 774:	a1 1d       	adc	r26, r1
 776:	62 1f       	adc	r22, r18
 778:	83 9f       	mul	r24, r19
 77a:	a0 0d       	add	r26, r0
 77c:	61 1d       	adc	r22, r1
 77e:	22 1f       	adc	r18, r18
 780:	74 9f       	mul	r23, r20
 782:	33 27       	eor	r19, r19
 784:	a0 0d       	add	r26, r0
 786:	61 1d       	adc	r22, r1
 788:	23 1f       	adc	r18, r19
 78a:	84 9f       	mul	r24, r20
 78c:	60 0d       	add	r22, r0
 78e:	21 1d       	adc	r18, r1
 790:	82 2f       	mov	r24, r18
 792:	76 2f       	mov	r23, r22
 794:	6a 2f       	mov	r22, r26
 796:	11 24       	eor	r1, r1
 798:	9f 57       	subi	r25, 0x7F	; 127
 79a:	50 40       	sbci	r21, 0x00	; 0
 79c:	8a f0       	brmi	.+34     	; 0x7c0 <__mulsf3_pse+0x84>
 79e:	e1 f0       	breq	.+56     	; 0x7d8 <__mulsf3_pse+0x9c>
 7a0:	88 23       	and	r24, r24
 7a2:	4a f0       	brmi	.+18     	; 0x7b6 <__mulsf3_pse+0x7a>
 7a4:	ee 0f       	add	r30, r30
 7a6:	ff 1f       	adc	r31, r31
 7a8:	bb 1f       	adc	r27, r27
 7aa:	66 1f       	adc	r22, r22
 7ac:	77 1f       	adc	r23, r23
 7ae:	88 1f       	adc	r24, r24
 7b0:	91 50       	subi	r25, 0x01	; 1
 7b2:	50 40       	sbci	r21, 0x00	; 0
 7b4:	a9 f7       	brne	.-22     	; 0x7a0 <__mulsf3_pse+0x64>
 7b6:	9e 3f       	cpi	r25, 0xFE	; 254
 7b8:	51 05       	cpc	r21, r1
 7ba:	70 f0       	brcs	.+28     	; 0x7d8 <__mulsf3_pse+0x9c>
 7bc:	5c cf       	rjmp	.-328    	; 0x676 <__fp_inf>
 7be:	a6 cf       	rjmp	.-180    	; 0x70c <__fp_szero>
 7c0:	5f 3f       	cpi	r21, 0xFF	; 255
 7c2:	ec f3       	brlt	.-6      	; 0x7be <__mulsf3_pse+0x82>
 7c4:	98 3e       	cpi	r25, 0xE8	; 232
 7c6:	dc f3       	brlt	.-10     	; 0x7be <__mulsf3_pse+0x82>
 7c8:	86 95       	lsr	r24
 7ca:	77 95       	ror	r23
 7cc:	67 95       	ror	r22
 7ce:	b7 95       	ror	r27
 7d0:	f7 95       	ror	r31
 7d2:	e7 95       	ror	r30
 7d4:	9f 5f       	subi	r25, 0xFF	; 255
 7d6:	c1 f7       	brne	.-16     	; 0x7c8 <__mulsf3_pse+0x8c>
 7d8:	fe 2b       	or	r31, r30
 7da:	88 0f       	add	r24, r24
 7dc:	91 1d       	adc	r25, r1
 7de:	96 95       	lsr	r25
 7e0:	87 95       	ror	r24
 7e2:	97 f9       	bld	r25, 7
 7e4:	08 95       	ret

000007e6 <_exit>:
 7e6:	f8 94       	cli

000007e8 <__stop_program>:
 7e8:	ff cf       	rjmp	.-2      	; 0x7e8 <__stop_program>
