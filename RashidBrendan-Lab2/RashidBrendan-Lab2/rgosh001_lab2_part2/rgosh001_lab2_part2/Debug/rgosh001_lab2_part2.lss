
rgosh001_lab2_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000178  000001ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000178  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000030  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000128  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000a5  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001cb  00000000  00000000  00000419  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000074  00000000  00000000  000005e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000165  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000d8  00000000  00000000  000007bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00000895  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	6c c0       	rjmp	.+216    	; 0x174 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
{
	return ((x & (0x01 << k)) != 0);
}

int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <main+0x6>
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x00;
  a8:	81 e2       	ldi	r24, 0x21	; 33
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	fc 01       	movw	r30, r24
  ae:	10 82       	st	Z, r1
	DDRC = 0xFF;
  b0:	87 e2       	ldi	r24, 0x27	; 39
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	unsigned char tmp = 0x00;
  ba:	19 82       	std	Y+1, r1	; 0x01
	
	while(1)
	{
		tmp = PINA;
  bc:	80 e2       	ldi	r24, 0x20	; 32
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	fc 01       	movw	r30, r24
  c2:	80 81       	ld	r24, Z
  c4:	89 83       	std	Y+1, r24	; 0x01
		if(tmp == 1 || tmp == 2)
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	81 30       	cpi	r24, 0x01	; 1
  ca:	19 f0       	breq	.+6      	; 0xd2 <main+0x34>
  cc:	89 81       	ldd	r24, Y+1	; 0x01
  ce:	82 30       	cpi	r24, 0x02	; 2
  d0:	31 f4       	brne	.+12     	; 0xde <main+0x40>
		{
			PORTC = 0x20;
  d2:	88 e2       	ldi	r24, 0x28	; 40
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	20 e2       	ldi	r18, 0x20	; 32
  d8:	fc 01       	movw	r30, r24
  da:	20 83       	st	Z, r18
  dc:	3b c0       	rjmp	.+118    	; 0x154 <main+0xb6>
		}
		else if(tmp == 3 || tmp == 4)
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	83 30       	cpi	r24, 0x03	; 3
  e2:	19 f0       	breq	.+6      	; 0xea <main+0x4c>
  e4:	89 81       	ldd	r24, Y+1	; 0x01
  e6:	84 30       	cpi	r24, 0x04	; 4
  e8:	31 f4       	brne	.+12     	; 0xf6 <main+0x58>
		{
			PORTC = 0x30;
  ea:	88 e2       	ldi	r24, 0x28	; 40
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	20 e3       	ldi	r18, 0x30	; 48
  f0:	fc 01       	movw	r30, r24
  f2:	20 83       	st	Z, r18
  f4:	2f c0       	rjmp	.+94     	; 0x154 <main+0xb6>
		}
		else if(tmp == 5 || tmp == 6)
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	85 30       	cpi	r24, 0x05	; 5
  fa:	19 f0       	breq	.+6      	; 0x102 <main+0x64>
  fc:	89 81       	ldd	r24, Y+1	; 0x01
  fe:	86 30       	cpi	r24, 0x06	; 6
 100:	31 f4       	brne	.+12     	; 0x10e <main+0x70>
		{
			PORTC = 0x38;
 102:	88 e2       	ldi	r24, 0x28	; 40
 104:	90 e0       	ldi	r25, 0x00	; 0
 106:	28 e3       	ldi	r18, 0x38	; 56
 108:	fc 01       	movw	r30, r24
 10a:	20 83       	st	Z, r18
 10c:	23 c0       	rjmp	.+70     	; 0x154 <main+0xb6>
		}
		else if(tmp >= 7 && tmp <= 9)
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	87 30       	cpi	r24, 0x07	; 7
 112:	48 f0       	brcs	.+18     	; 0x126 <main+0x88>
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	8a 30       	cpi	r24, 0x0A	; 10
 118:	30 f4       	brcc	.+12     	; 0x126 <main+0x88>
		{
			PORTC = 0x1C;
 11a:	88 e2       	ldi	r24, 0x28	; 40
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	2c e1       	ldi	r18, 0x1C	; 28
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18
 124:	17 c0       	rjmp	.+46     	; 0x154 <main+0xb6>
		}
		else if(tmp >= 10 && tmp <= 12)
 126:	89 81       	ldd	r24, Y+1	; 0x01
 128:	8a 30       	cpi	r24, 0x0A	; 10
 12a:	48 f0       	brcs	.+18     	; 0x13e <main+0xa0>
 12c:	89 81       	ldd	r24, Y+1	; 0x01
 12e:	8d 30       	cpi	r24, 0x0D	; 13
 130:	30 f4       	brcc	.+12     	; 0x13e <main+0xa0>
		{
			PORTC = 0x3E;
 132:	88 e2       	ldi	r24, 0x28	; 40
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	2e e3       	ldi	r18, 0x3E	; 62
 138:	fc 01       	movw	r30, r24
 13a:	20 83       	st	Z, r18
 13c:	0b c0       	rjmp	.+22     	; 0x154 <main+0xb6>
		}
		else if(tmp >= 13 && tmp <= 15)
 13e:	89 81       	ldd	r24, Y+1	; 0x01
 140:	8d 30       	cpi	r24, 0x0D	; 13
 142:	40 f0       	brcs	.+16     	; 0x154 <main+0xb6>
 144:	89 81       	ldd	r24, Y+1	; 0x01
 146:	80 31       	cpi	r24, 0x10	; 16
 148:	28 f4       	brcc	.+10     	; 0x154 <main+0xb6>
		{
			PORTC = 0x3F;
 14a:	88 e2       	ldi	r24, 0x28	; 40
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	2f e3       	ldi	r18, 0x3F	; 63
 150:	fc 01       	movw	r30, r24
 152:	20 83       	st	Z, r18
		}
		
		unsigned char tmp2 = PORTC;
 154:	88 e2       	ldi	r24, 0x28	; 40
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	fc 01       	movw	r30, r24
 15a:	80 81       	ld	r24, Z
 15c:	8a 83       	std	Y+2, r24	; 0x02
		if (tmp < 4)
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	84 30       	cpi	r24, 0x04	; 4
 162:	38 f4       	brcc	.+14     	; 0x172 <main+0xd4>
		{
			PORTC = (tmp2 | 0x40);
 164:	88 e2       	ldi	r24, 0x28	; 40
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	2a 81       	ldd	r18, Y+2	; 0x02
 16a:	20 64       	ori	r18, 0x40	; 64
 16c:	fc 01       	movw	r30, r24
 16e:	20 83       	st	Z, r18
		}
	}
 170:	a5 cf       	rjmp	.-182    	; 0xbc <main+0x1e>
 172:	a4 cf       	rjmp	.-184    	; 0xbc <main+0x1e>

00000174 <_exit>:
 174:	f8 94       	cli

00000176 <__stop_program>:
 176:	ff cf       	rjmp	.-2      	; 0x176 <__stop_program>
